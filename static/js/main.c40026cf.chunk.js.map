{"version":3,"sources":["App.js","index.js"],"names":["preparedGoods","map","item","index","id","product","App","state","selectedGood","prevSelected","selectHandler","event","setState","target","classList","remove","add","clearHandler","this","className","toUpperCase","type","onClick","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+NAgBMA,G,MAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCC,KAAI,SAACC,EAAMC,GAAP,MACxC,CACEC,GAAID,EACJE,QAASH,OA6DEI,E,4MAxDbC,MAAQ,CACNC,aAAc,IACdC,aAAc,M,EAGhBC,cAAgB,SAACC,EAAON,GAAa,IAC3BI,EAAiB,EAAKF,MAAtBE,aAER,EAAKG,SAAS,CAAEJ,aAAcH,IAE1BI,IAAiBE,EAAME,QAA2B,OAAjBJ,GACnCA,EAAaK,UAAUC,OAAO,YAGhCJ,EAAME,OAAOC,UAAUE,IAAI,YAE3B,EAAKJ,SAAS,CAAEH,aAAcE,EAAME,U,EAGtCI,aAAe,WACb,EAAKL,SAAS,CAAEJ,aAAc,MAC9B,EAAKD,MAAME,aAAaK,UAAUC,OAAO,a,uDAGjC,IAAD,OACCP,EAAiBU,KAAKX,MAAtBC,aAER,OACE,yBAAKW,UAAU,OACb,yBAAKA,UAAU,UACb,qDAAuBX,EAAaY,gBACpC,4BACEC,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKD,cAHhB,UAQF,yBAAKE,UAAU,SACZnB,EAAcC,KAAI,SAAAC,GAAI,OACrB,4BACEqB,IAAKrB,EAAKE,GACViB,KAAK,SACLF,UAAU,cACVG,QAAS,SAAAX,GAAK,OAAI,EAAKD,cAAcC,EAAOT,EAAKG,WAEhDH,EAAKG,kB,GAhDFmB,IAAMC,WCnBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c40026cf.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((item, index) => (\n  {\n    id: index,\n    product: item,\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    selectedGood: '-',\n    prevSelected: null,\n  }\n\n  selectHandler = (event, product) => {\n    const { prevSelected } = this.state;\n\n    this.setState({ selectedGood: product });\n\n    if (prevSelected !== event.target && prevSelected !== null) {\n      prevSelected.classList.remove('selected');\n    }\n\n    event.target.classList.add('selected');\n\n    this.setState({ prevSelected: event.target });\n  }\n\n  clearHandler = () => {\n    this.setState({ selectedGood: '-' });\n    this.state.prevSelected.classList.remove('selected');\n  }\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>{`Selected good: ${selectedGood.toUpperCase()}`}</h1>\n          <button\n            type=\"button\"\n            className=\"header__btn\"\n            onClick={this.clearHandler}\n          >\n            Clear\n          </button>\n        </div>\n        <div className=\"goods\">\n          {preparedGoods.map(item => (\n            <button\n              key={item.id}\n              type=\"button\"\n              className=\"goods__item\"\n              onClick={event => this.selectHandler(event, item.product)}\n            >\n              {item.product}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}